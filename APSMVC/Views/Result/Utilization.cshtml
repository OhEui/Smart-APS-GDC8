@model APSMVC.Models.UtilizationModel
@{
    ViewBag.Title = "Utilization";
    Layout = "~/Views/_Layout.cshtml";
}
@section Style
{
    <style>
        .select2-selection--multiple {
            height: 38px;
            overflow-y: auto;
            font-size: 4px;
        }
    </style>
}

<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        <div class="card">
            <div class="card-body">

                <form action="#">
                    <div class="row">
                        <div class="col-2">
                            <div class="form-group">
                                <label>버전번호</label>
                                <select class="select2" style="width: 100%;">
                                    <option selected>TSK-20191107-112038</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-2">
                            <div class="form-group">
                                <label>설비상태</label>
                                <select class="select2" style="width: 100%;">
                                    <option selected>BUSY</option>
                                    <option>SETUP</option>
                                    <option>IDLE</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-14 align-self-end">
                            <div class="form-group">
                                <button type="submit" class="btn btn-lg btn-default" style="width: 38px; height: 38px; padding-left: 9px;
                        padding-top: 6px; margin-left: 6px">
                                    <i class="fa fa-search"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </form>

            </div>
        </div>

        <div class="card">
            <div class="card-body table-responsive p-0 testClass">
                @Html.Table(Model.TableData, "table table-hover text-nowrap")
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <div id="chartdiv"></div>
            </div>
        </div>
    </div>
</section>


@section Scripts
{
    <script>


        $(function () {

            /**
             * ---------------------------------------
             * This demo was created using amCharts 5.
             *
             * For more information visit:
             * https://www.amcharts.com/
             *
             * Documentation is available at:
             * https://www.amcharts.com/docs/v5/
             * ---------------------------------------
             */

            function hoverCallBack(e) {
                var itemContainer = e.target;

                // As series list is data of a legend, dataContext is series
                var series = itemContainer.dataItem.dataContext;

                chart.series.each(function (chartSeries) {
                    if (chartSeries != series) {
                        chartSeries.strokes.template.setAll({
                            strokeOpacity: 0.15,
                            stroke: am5.color(0x000000)
                        });
                    } else {
                        chartSeries.strokes.template.setAll({
                            strokeWidth: 3
                        });
                    }
                })
            }
            function unhoverCallBack(e) {
                var itemContainer = e.target;
                var series = itemContainer.dataItem.dataContext;

                chart.series.each(function (chartSeries) {
                    chartSeries.strokes.template.setAll({
                        strokeOpacity: 1,
                        strokeWidth: 1,
                        stroke: chartSeries.get("fill")
                    });
                });
            }

            $('.select2').select2()

            //$('.testClass').hover(hoverCallBack, unhoverCallBack);

            // Create root element
            // https://www.amcharts.com/docs/v5/getting-started/#Root_element
            var root = am5.Root.new("chartdiv");

            // Set themes
            // https://www.amcharts.com/docs/v5/concepts/themes/
            root.setThemes([
                am5themes_Animated.new(root)
            ]);

            // Create chart
            // https://www.amcharts.com/docs/v5/charts/xy-chart/
            var chart = root.container.children.push(am5xy.XYChart.new(root, {
                panX: true,
                panY: true,
                wheelX: "panX",
                wheelY: "zoomX",
                maxTooltipDistance: 0
            }));


            // Create axes
            // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/
            var xAxis = chart.xAxes.push(am5xy.DateAxis.new(root, {
                maxDeviation: 0.2,
                baseInterval: {
                    timeUnit: "day", count: 1
                },
                tooltip: am5.Tooltip.new(root, {}),
                renderer: am5xy.AxisRendererX.new(root, {})
            }));

            var yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {
                renderer: am5xy.AxisRendererY.new(root, {})
            }));


            // Add series
            // https://www.amcharts.com/docs/v5/charts/xy-chart/series/

            @foreach (var item in Model.ChartDictionary)
            {
                string name = item.Key;

                var data = item.Value.Select((i) => new { value = Math.Round(i.RATE,2), date = i.TARGET_DATE.ToString("yyyy-MM-dd") });

                <text>
                var series = chart.series.push(am5xy.LineSeries.new(root, {
                    name: '@name',
                    xAxis: xAxis,
                    yAxis: yAxis,
                    valueYField: "value",
                    valueXField: "date",
                    legendValueText: "{valueY}%",
                    tooltip: am5.Tooltip.new(root, {
                        pointerOrientation: "horizontal",
                        labelText: "{valueY}%"
                    })
                }));

                // https://www.amcharts.com/docs/v5/concepts/data/
                series.data.processor = am5.DataProcessor.new(root, {
                    numericFields: ["value"],
                    dateFields: ["date"],
                    dateFormat: "yyyy-MM-dd"
                });

                var data = @Html.Raw(Json.Encode(data));
                series.data.setAll(data);
                series.appear();

                </text>

            }

            /*
            for (var i = 0; i < 3; i++) {
                var series = chart.series.push(am5xy.LineSeries.new(root, {
                    name: 'test',
                    xAxis: xAxis,
                    yAxis: yAxis,
                    valueYField: "rate",
                    valueXField: "target_date",
                    legendValueText: "{valueY}",
                    tooltip: am5.Tooltip.new(root, {
                        pointerOrientation: "horizontal",
                        labelText: "{valueY}"
                    })
                }));

                var data = {};
                series.data.setAll(data);

                // Make stuff animate on load
                // https://www.amcharts.com/docs/v5/concepts/animations/
                series.appear();
            }
            */
            
            // Add cursor
            // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/
            var cursor = chart.set("cursor", am5xy.XYCursor.new(root, {
                behavior: "none"
            }));
            cursor.lineY.set("visible", false);
            

            // Add scrollbar
            // https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/
            chart.set("scrollbarX", am5.Scrollbar.new(root, {
                orientation: "horizontal"
            }));

            chart.set("scrollbarY", am5.Scrollbar.new(root, {
                orientation: "vertical"
            }));


            // Add legend
            // https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/
            var legend = chart.rightAxesContainer.children.push(am5.Legend.new(root, {
                width: 200,
                paddingLeft: 15,
                height: am5.percent(100)
            }));



            // When legend item container is hovered, dim all the series except the hovered one
            legend.itemContainers.template.events.on("pointerover", hoverCallBack)

            // When legend item container is unhovered, make all series as they are
            legend.itemContainers.template.events.on("pointerout", unhoverCallBack)

            legend.itemContainers.template.set("width", am5.p100);
            legend.valueLabels.template.setAll({
                width: am5.p100,
                textAlign: "right"
            });

            // It's is important to set legend data after all the events are set on template, otherwise events won't be copied
            legend.data.setAll(chart.series.values);


            // Make stuff animate on load
            // https://www.amcharts.com/docs/v5/concepts/animations/
            chart.appear(1000, 100);

        })
    </script>

}