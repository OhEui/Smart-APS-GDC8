
@{
    ViewBag.Title = "Utilization";
    Layout = "~/Views/_Layout.cshtml";
}

<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        <div class="card">
            <div class="card-body">

                <form action="#">
                    <div class="row">
                        <div class="col-2">
                            <div class="form-group">
                                <label>Condition</label>
                                <div class="input-group input-group-lg">
                                    <input type="search" class="form-control form-control-lg" style="height: 38px;">
                                </div>
                            </div>
                        </div>
                        <div class="col-2">
                            <div class="form-group">
                                <label>Condition</label>
                                <select class="select2" style="width: 100%;">
                                    <option selected>codi</option>
                                    <option>DESC</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-2">
                            <div class="form-group">
                                <label>Condition</label>
                                <select class="select2" style="width: 100%;">
                                    <option selected>codi</option>
                                    <option>Date</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-2">
                            <div class="form-group">
                                <label>Condition</label>
                                <select class="select2" style="width: 100%;">
                                    <option selected>codi</option>
                                    <option>Date</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-14 align-self-end">
                            <div class="form-group">
                                <button type="submit" class="btn btn-lg btn-default" style="width: 38px; height: 38px; padding-left: 9px;
                        padding-top: 6px; margin-left: 6px">
                                    <i class="fa fa-search"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </form>

            </div>
        </div>

        <div class="card">

            <!-- /.card-header -->
            <div class="card-body table-responsive p-0">
                <table class="table table-hover text-nowrap">
                    <thead>
                        <tr>
                            <th>EqpGroup</th>
                            <th>20211201</th>
                            <th>20211202</th>
                            <th>20211203</th>
                            <th>20211204</th>

                            <th>20211205</th>
                            <th>20211206</th>
                            <th>20211207</th>
                            <th>20211208</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>press</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                        </tr>
                        <tr>
                            <td>paint</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                        </tr>
                        <tr>
                            <td>finish</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                            <td>80.00%</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <!-- /.card-body -->
        </div>
        <div class="card">
            <div class="card-body">
                <div id="chartdiv"></div>
            </div>
        </div>
    </div>
</section>


@section Scripts
{
    <script>
        $(function () {
            $('.select2').select2()
            /**
             * ---------------------------------------
             * This demo was created using amCharts 5.
             * 
             * For more information visit:
             * https://www.amcharts.com/
             * 
             * Documentation is available at:
             * https://www.amcharts.com/docs/v5/
             * ---------------------------------------
             */

            // Create root element
            // https://www.amcharts.com/docs/v5/getting-started/#Root_element 
            var root = am5.Root.new("chartdiv");


            // Set themes
            // https://www.amcharts.com/docs/v5/concepts/themes/ 
            root.setThemes([
                am5themes_Animated.new(root)
            ]);


            // Create chart
            // https://www.amcharts.com/docs/v5/charts/xy-chart/
            var chart = root.container.children.push(am5xy.XYChart.new(root, {
                panX: true,
                panY: true,
                wheelX: "panX",
                wheelY: "zoomX",
                maxTooltipDistance: 0
            }));


            var date = new Date();
            date.setHours(0, 0, 0, 0);
            var value = 100;

            function generateData() {
                value = Math.round((Math.random() * 10 - 4.2) + value);
                am5.time.add(date, "day", 1);
                return {
                    date: date.getTime(),
                    value: value
                };
            }

            function generateDatas(count) {
                var data = [];
                for (var i = 0; i < count; ++i) {
                    data.push(generateData());
                }
                return data;
            }


            // Create axes
            // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/
            var xAxis = chart.xAxes.push(am5xy.DateAxis.new(root, {
                maxDeviation: 0.2,
                baseInterval: {
                    timeUnit: "day",
                    count: 1
                },
                renderer: am5xy.AxisRendererX.new(root, {}),
                tooltip: am5.Tooltip.new(root, {})
            }));

            var yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {
                renderer: am5xy.AxisRendererY.new(root, {})
            }));


            // Add series
            // https://www.amcharts.com/docs/v5/charts/xy-chart/series/
            for (var i = 0; i < 10; i++) {
                var series = chart.series.push(am5xy.LineSeries.new(root, {
                    name: "Series " + i,
                    xAxis: xAxis,
                    yAxis: yAxis,
                    valueYField: "value",
                    valueXField: "date",
                    legendValueText: "{valueY}",
                    tooltip: am5.Tooltip.new(root, {
                        pointerOrientation: "horizontal",
                        labelText: "{valueY}"
                    })
                }));

                date = new Date();
                date.setHours(0, 0, 0, 0);
                value = 0;

                var data = generateDatas(100);
                series.data.setAll(data);

                // Make stuff animate on load
                // https://www.amcharts.com/docs/v5/concepts/animations/
                series.appear();
            }


            // Add cursor
            // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/
            var cursor = chart.set("cursor", am5xy.XYCursor.new(root, {
                behavior: "none"
            }));
            cursor.lineY.set("visible", false);


            // Add scrollbar
            // https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/
            chart.set("scrollbarX", am5.Scrollbar.new(root, {
                orientation: "horizontal"
            }));

            chart.set("scrollbarY", am5.Scrollbar.new(root, {
                orientation: "vertical"
            }));


            // Add legend
            // https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/
            var legend = chart.rightAxesContainer.children.push(am5.Legend.new(root, {
                width: 200,
                paddingLeft: 15,
                height: am5.percent(100)
            }));

            // When legend item container is hovered, dim all the series except the hovered one
            legend.itemContainers.template.events.on("pointerover", function (e) {
                var itemContainer = e.target;

                // As series list is data of a legend, dataContext is series
                var series = itemContainer.dataItem.dataContext;

                chart.series.each(function (chartSeries) {
                    if (chartSeries != series) {
                        chartSeries.strokes.template.setAll({
                            strokeOpacity: 0.15,
                            stroke: am5.color(0x000000)
                        });
                    } else {
                        chartSeries.strokes.template.setAll({
                            strokeWidth: 3
                        });
                    }
                })
            })

            // When legend item container is unhovered, make all series as they are
            legend.itemContainers.template.events.on("pointerout", function (e) {
                var itemContainer = e.target;
                var series = itemContainer.dataItem.dataContext;

                chart.series.each(function (chartSeries) {
                    chartSeries.strokes.template.setAll({
                        strokeOpacity: 1,
                        strokeWidth: 1,
                        stroke: chartSeries.get("fill")
                    });
                });
            })

            legend.itemContainers.template.set("width", am5.p100);
            legend.valueLabels.template.setAll({
                width: am5.p100,
                textAlign: "right"
            });

            // It's is important to set legend data after all the events are set on template, otherwise events won't be copied
            legend.data.setAll(chart.series.values);


            // Make stuff animate on load
            // https://www.amcharts.com/docs/v5/concepts/animations/
            chart.appear(1000, 100);

        })
    </script>

}